#pragma checksum "D:\dotnet\KonusarakOgrenProject\WEB\Views\Test\TakeQuiz.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "13de1ee6c709def9cbf03f112ddfe6359789f076"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Test_TakeQuiz), @"mvc.1.0.view", @"/Views/Test/TakeQuiz.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 2 "D:\dotnet\KonusarakOgrenProject\WEB\Views\_ViewImports.cshtml"
using DTO.UserDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\dotnet\KonusarakOgrenProject\WEB\Views\_ViewImports.cshtml"
using WEB.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\dotnet\KonusarakOgrenProject\WEB\Views\_ViewImports.cshtml"
using CORE.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\dotnet\KonusarakOgrenProject\WEB\Views\_ViewImports.cshtml"
using DOMAIN.Entities;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"13de1ee6c709def9cbf03f112ddfe6359789f076", @"/Views/Test/TakeQuiz.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f8d83bd29adb8835c92bb4172098d2c650fe9b2c", @"/Views/_ViewImports.cshtml")]
    public class Views_Test_TakeQuiz : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<int>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "D:\dotnet\KonusarakOgrenProject\WEB\Views\Test\TakeQuiz.cshtml"
  
    ViewData["Title"] = "TakeQuiz";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div id=""vm"" v-cloak>
    <div class=""container-fluid"">
        <div class=""row"">
            <div class=""col-lg-8 col-md-10 col-sm-12 col-12 offset-lg-2 offset-md-1 mt-5 mb-5 bg-light rounded-3 p-3"">
                <h3 class=""w-100 text-center""><u>{{quiz.ArticleTitle}}</u></h3>
                <div class=""w-100 border border-2 border-dark p-3"" style=""overflow-y:scroll; max-height:300px"" v-html=""quiz.ArticleContent"">
                </div>
                <div class=""row p-1"">
                    <div class=""col-lg-6 col-12 p-3 mt-3 p-1"" v-for=""question,index in quiz.Questions"" v-bind:key=""index"">
                        <div class=""border border-1 p-2 h-100"">
                            <div class=""mb-3"">
                                <b>{{index + 1}} </b> {{question.Content}}
                            </div>
                            <div class=""mb-2"">
");
            WriteLiteral(@"                                <input class=""form-check-input"" type=""radio"" value=""a"" v-model=""answers[index].answer"" v-bind:disabled=""answers[index].correct != ''"">
                                <span class=""form-check-label"" v-bind:class=""getBgClass(index,'a')"">
                                    A) {{question.Answers[0].Content}}
                                </span>
                                <br />
                            </div>
                            <div class=""mb-2"">
");
            WriteLiteral(@"                                <input class=""form-check-input"" type=""radio"" value=""b"" v-model=""answers[index].answer"" v-bind:disabled=""answers[index].correct != ''"">
                                <span class=""form-check-label"" v-bind:class=""getBgClass(index,'b')"">
                                    B) {{question.Answers[1].Content}}
                                </span>
                                <br />
                            </div>
                            <div class=""mb-2"">
");
            WriteLiteral(@"                                <input class=""form-check-input"" type=""radio"" value=""c"" v-model=""answers[index].answer"" v-bind:disabled=""answers[index].correct != ''"">
                                <span class=""form-check-label"" v-bind:class=""getBgClass(index,'c')"">
                                    C) {{question.Answers[2].Content}}
                                </span>
                                <br />
                            </div>
                            <div>
");
            WriteLiteral(@"                                <input class=""form-check-input"" type=""radio"" value=""d"" v-model=""answers[index].answer"" v-bind:disabled=""answers[index].correct != ''"">
                                <span class=""form-check-label"" v-bind:class=""getBgClass(index,'d')"">
                                    D) {{question.Answers[3].Content}}
                                </span>
                                <br />
                            </div>
                        </div>
                    </div>
                </div>
                <div class=""row px-3 text-center"">
                    <button class=""w-100 btn btn-success"" v-on:click=""submit()"" v-bind:disabled=""sending"" v-if=""!finish"">
                        <div v-if=""sending"">
                            <div class=""spinner-border spinner-border-sm text-light"" role=""status"">
                                <span class=""visually-hidden"">Loading...</span>
                            </div>
                            <b>Submitting<");
            WriteLiteral(@"/b>
                        </div>
                        <div v-else>
                            <b>Submit</b>
                        </div>
                    </button>
                    <button class=""w-100 btn btn-primary"" v-on:click=""again()"" v-else>
                        <div>
                            Again
                        </div>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    const vm = Vue.createApp({
        data() {
            return {
                quizId: ");
#nullable restore
#line 82 "D:\dotnet\KonusarakOgrenProject\WEB\Views\Test\TakeQuiz.cshtml"
                   Write(Model);

#line default
#line hidden
#nullable disable
            WriteLiteral(@",
                quiz: {},
                finish : false,
                sending: false,
                answers: [
                    {
                        correct: """",
                        answer: """"
                    },
                    {
                        correct: """",
                        answer: """"
                    },
                    {
                        correct: """",
                        answer: """"
                    },
                    {
                        correct: """",
                        answer: """"
                    }
                ]
            }
        },
        created() {
            this.getQuiz();
        },
        methods: {
            getQuiz() {
                axios.get(`/service/Quiz/Get/${this.quizId}`)
                    .then(resp => {
                        if (resp.data.Success) {
                            this.quiz = resp.data.Data;
                        }
                        else {");
            WriteLiteral(@"
                            Swal.fire(
                                'Quiz',
                                'Quiz cannot be fetched',
                                'error'
                            )
                        }
                    })
                    .catch(err => {
                        Swal.fire(
                            'Quiz',
                            'Quiz cannot be fetched',
                            'error'
                        )
                    })
            },
            submit() {
                let obj = {
                    quizId: this.quizId,
                    a1: this.answers[0].answer,
                    a2: this.answers[1].answer,
                    a3: this.answers[2].answer,
                    a4: this.answers[3].answer,
                }
                this.sending = true;
                axios.post(""/Service/Quiz/Check"", obj)
                    .then(resp => {
                        for (let i = 0; i < this.");
            WriteLiteral(@"answers.length; i++) {
                            this.answers[i].correct = resp.data[i];
                        }
                        this.finish = true;
                    })
                    .catch(err => {

                    })
                    .finally(_ => {
                        this.sending = false;
                    });
            },
            getBgClass(index,val) {
                if (this.answers[0].correct == '') {
                    return 'bg-transparent';
                }
                else if (this.answers[index].answer == val) {
                    if (this.answers[index].answer == this.answers[index].correct) {
                        return 'bg-success text-light';
                    }
                    else {
                        return 'bg-danger text-light';
                    }
                }
                else {
                    return 'bg-transparent';
                }
            },
            again() {
        ");
            WriteLiteral("        location.reload();\r\n            }\r\n        }\r\n    }).mount(\'#vm\');\r\n</script>\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<int> Html { get; private set; }
    }
}
#pragma warning restore 1591
