#pragma checksum "D:\dotnet\KonusarakOgrenProject\WEB\Views\Test\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "9bffb07146096d256937170d064b399609c2e01b"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Test_Index), @"mvc.1.0.view", @"/Views/Test/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 2 "D:\dotnet\KonusarakOgrenProject\WEB\Views\_ViewImports.cshtml"
using DTO.UserDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\dotnet\KonusarakOgrenProject\WEB\Views\_ViewImports.cshtml"
using WEB.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\dotnet\KonusarakOgrenProject\WEB\Views\_ViewImports.cshtml"
using CORE.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\dotnet\KonusarakOgrenProject\WEB\Views\_ViewImports.cshtml"
using DOMAIN.Entities;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9bffb07146096d256937170d064b399609c2e01b", @"/Views/Test/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f8d83bd29adb8835c92bb4172098d2c650fe9b2c", @"/Views/_ViewImports.cshtml")]
    public class Views_Test_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\dotnet\KonusarakOgrenProject\WEB\Views\Test\Index.cshtml"
  
    ViewData["Title"] = "Index";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div id=""vm"" v-cloak>
    <div class=""container-fluid"">
        <div class=""row"">
            <div class=""col-lg-8 col-md-10 col-sm-12 col-12 offset-lg-2 offset-md-1 mt-5 mb-5 bg-light rounded-3 p-3"">
                <table class=""table table-hover"">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th class=""text-uppercase"">Title</th>
                            <th class=""text-uppercase"">Date</th>
                            <th class=""text-uppercase"">Operation</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for=""quiz, index in quizzes"" v-bind:key=""quiz.Id"">
                            <td>{{quiz.Id}}</td>
                            <td>{{quiz.ArticleTitle}}</td>
                            <td>{{quiz.InsertDate.split('T')[0]}}</td>
                            <td>
                                <a class=""btn btn-sm btn-primary"" v-bind:hr");
            WriteLiteral(@"ef=""`/Test/TakeQuiz?id=${quiz.Id}`"" target=""_blank"">
                                    Start
                                </a>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script>
    const vm = Vue.createApp({
        data() {
            return {
                quizzes: []
            }
        },
        created() {
            this.getAll();
        },
        methods: {
            getAll() {
                axios.get(""/Service/Quiz/GetAll"")
                    .then(resp => {
                        if (resp.data.Success) {
                            this.quizzes = resp.data.Data;
                        } else {
                            Swal.fire(
                                'Get All Quizzes',
                                `An error has been occured : ${resp.data.Erros.join('. ')}`,
                                'error'
       ");
            WriteLiteral(@"                     )
                        }
                    })
                    .catch(err => {
                        Swal.fire(
                            'Get All Quizzes',
                            `An error has been occured : ${err}`,
                            'error'
                        )
                    })
            }
        }
    }).mount('#vm');
</script>

");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
