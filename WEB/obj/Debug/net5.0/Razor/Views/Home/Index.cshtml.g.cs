#pragma checksum "D:\dotnet\KonusarakOgrenProject\WEB\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b23da0136fc1287839b2aa45793588dc01fa45ca"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 2 "D:\dotnet\KonusarakOgrenProject\WEB\Views\_ViewImports.cshtml"
using DTO.UserDtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\dotnet\KonusarakOgrenProject\WEB\Views\_ViewImports.cshtml"
using WEB.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\dotnet\KonusarakOgrenProject\WEB\Views\_ViewImports.cshtml"
using CORE.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\dotnet\KonusarakOgrenProject\WEB\Views\_ViewImports.cshtml"
using DOMAIN.Entities;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b23da0136fc1287839b2aa45793588dc01fa45ca", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f8d83bd29adb8835c92bb4172098d2c650fe9b2c", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<ArticleOption>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "empty", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "a", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "b", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "c", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "d", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "D:\dotnet\KonusarakOgrenProject\WEB\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Index";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div id=""vm"" v-cloak>
    <div class=""container-fluid"">
        <div class=""row"">
            <div class=""col-lg-8 col-md-10 col-sm-12 col-12 offset-lg-2 offset-md-1 mt-5 mb-5"">
                <div class=""mb-1 shadow py-3 px-2 bg-light rounded-top"">
                    <h2 class=""w-100 text-center bg-dark p-2 rounded text-light"">Select Article</h2>
                    <select id=""selectArticle"" class=""form-control"" v-model=""url"" v-on:change=""getArticleContent()"" v-bind:disabled=""fetchOp"">
                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b23da0136fc1287839b2aa45793588dc01fa45ca5561", async() => {
                WriteLiteral("Select Article");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("disabled", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
#nullable restore
#line 15 "D:\dotnet\KonusarakOgrenProject\WEB\Views\Home\Index.cshtml"
                          
                            foreach (var item in Model)
                            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b23da0136fc1287839b2aa45793588dc01fa45ca7359", async() => {
#nullable restore
#line 18 "D:\dotnet\KonusarakOgrenProject\WEB\Views\Home\Index.cshtml"
                                                     Write(item.Title);

#line default
#line hidden
#nullable disable
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
#nullable restore
#line 18 "D:\dotnet\KonusarakOgrenProject\WEB\Views\Home\Index.cshtml"
                                   WriteLiteral(item.Url);

#line default
#line hidden
#nullable disable
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
#nullable restore
#line 19 "D:\dotnet\KonusarakOgrenProject\WEB\Views\Home\Index.cshtml"
                            }
                        

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                    </select>
                </div>
                <div class=""mb-1 shadow py-3 px-2 bg-light"">
                    <h3 class=""w-100 text-center bg-dark p-2 rounded text-light"">Article Content</h3>
                    <div class=""text-center"" v-if=""fetchOp"">
                        <div class=""spinner-border"" role=""status"">
                            <span class=""visually-hidden"">Loading...</span>
                        </div>
                        <br />
                        <span>Loading...</span>
                    </div>
                    <div v-else style=""max-height:300px; overflow-y:scroll"" class=""p-3"">
                        <article v-html=""content""></article>
                    </div>
                </div>
                <div class=""mb-3 shadow py-3 px-3 bg-light rounded-bottom"" v-if=""ready"">
                    <h3 class=""w-100 text-center bg-dark p-2 rounded text-light"">Questions</h3>
                    <div class=""row"">
                        <d");
            WriteLiteral(@"iv class=""col-lg-8 offset-lg-2 col-md-10 offset-md-1 col-12 p-2"" v-for=""value,key,index in questions"">
                            <div class=""card p-4"">
                                <h5 class=""w-100 text-center""><i><u>Question-{{index+1}}</u></i></h5>
                                <div class=""card-header bg-secondary rounded-top"">
                                    <input class=""form-control"" v-bind:placeholder=""`Question-${index+1}`"" v-model=""questions[key].content"" v-bind:class=""{'is-invalid':questions[key].content==''}"" />
                                </div>
                                <ul class=""list-group list-group-flush rounded-bottom"">
                                    <li class=""list-group-item"" style=""background-color:lightgrey"">
                                        <input class=""form-control"" placeholder=""Answer-A"" v-model=""questions[key].a"" v-bind:class=""{'is-invalid':questions[key].a==''}"" />
                                    </li>
                                  ");
            WriteLiteral(@"  <li class=""list-group-item"" style=""background-color:lightgrey"">
                                        <input class=""form-control"" placeholder=""Answer-B"" v-model=""questions[key].b"" v-bind:class=""{'is-invalid':questions[key].b==''}"" />
                                    </li>
                                    <li class=""list-group-item"" style=""background-color:lightgrey"">
                                        <input class=""form-control"" placeholder=""Answer-C"" v-model=""questions[key].c"" v-bind:class=""{'is-invalid':questions[key].c==''}"" />
                                    </li>
                                    <li class=""list-group-item"" style=""background-color:lightgrey"">
                                        <input class=""form-control"" placeholder=""Answer-D"" v-model=""questions[key].d"" v-bind:class=""{'is-invalid':questions[key].d==''}"" />
                                    </li>
                                    <li class=""list-group-item"" style=""background-color:lightgrey"">
      ");
            WriteLiteral("                                  <h6 class=\"w-100 text-center text-dark\">Correct Answer</h6>\r\n                                        <select class=\"form-control\" v-model=\"questions[key].correct\">\r\n                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b23da0136fc1287839b2aa45793588dc01fa45ca12883", async() => {
                WriteLiteral("A");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b23da0136fc1287839b2aa45793588dc01fa45ca14082", async() => {
                WriteLiteral("B");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b23da0136fc1287839b2aa45793588dc01fa45ca15281", async() => {
                WriteLiteral("C");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b23da0136fc1287839b2aa45793588dc01fa45ca16480", async() => {
                WriteLiteral("D");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                        </select>
                                    </li>
                                </ul>
                            </div>
                        </div>
                        <div class=""col-12 p-3 text-center"">
                            <button class=""btn"" v-bind:class=""{'btn-success':saveAvailable,'btn-danger':!saveAvailable}"" v-on:click=""save()"" v-bind:disabled=""!saveAvailable || sending"" style=""min-width:300px"">
                                <div v-if=""sending"">
                                    <div class=""spinner-border spinner-border-sm text-light"" role=""status"">
                                        <span class=""visually-hidden"">Loading...</span>
                                    </div>
                                    Saving
                                </div>
                                <div v-else-if=""saveAvailable"">
                                    <b>Save</b>
                                </div>
              ");
            WriteLiteral(@"                  <div v-else-if=""!saveAvailable"">
                                    <b>Fill all questions and answers</b>
                                </div>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    const vm = Vue.createApp({
        data() {
            return {
                url: 'empty',
                content: '<div class=""w-100 text-center"">After article selection, this area will be filled with article content</div>',
                ready: false,
                fetchOp: false,
                sending: false,
                questions: {},
            }
        },
        created() {
            for (let i = 0; i < 4; i++) {
                this.questions[`q${i+1}`] = {
                    content: '',
                    a: '',
                    b: '',
                    c: '',
                    d: '',
             ");
            WriteLiteral(@"       correct: 'a',
                };
            }
        },
        computed: {
            saveAvailable() {
                for (let key in this.questions) {
                    for (let subkey in this.questions[key]) {
                        if (this.questions[key][subkey] == '') {
                            return false;
                        }
                    }
                }
                return true;
            }
        },
        methods: {
            getArticleContent() {
                this.fetchOp = true;
                this.ready = false;
                this.resetQuestions();
                axios.post(""/Service/Scrap/GetArticleContent"", { url: this.url })
                    .then(resp => {
                        this.content = resp.data.content;
                        if (resp.data.state) {
                            this.ready = true;
                        }
                    })
                    .catch(err => console.log(err))
     ");
            WriteLiteral(@"               .finally(_ => this.fetchOp = false)
            },
            save() {
                this.sending = true;
                let obj = {
                    articleTitle : this.findArticleTitle(),
                    articleContent: this.content,
                    question: this.questions
                };
                axios.post(""/Service/Quiz/Save"", obj)
                    .then(resp => {
                        this.setInitialData();
                        if (resp.data.state) {
                            Swal.fire(
                                'New Quiz',
                                'New quiz has been added',
                                'success'
                            )
                        } else {
                            Swal.fire(
                                'New Quiz',
                                'New quiz has not been added',
                                'error'
                            )
                        }
");
            WriteLiteral(@"                    })
                    .catch(err => {
                        this.setInitialData();
                        Swal.fire(
                            'New Quiz',
                            `New quiz has not been added: ${err}`,
                            'error'
                        )
                    })
                    .finally(_ => this.sending = false)
            },
            resetQuestions() {
                for (let key in this.questions) {
                    for (let subkey in this.questions[key]) {
                        this.questions[key][subkey] = '';
                    }
                }
            },
            setInitialData() {
                this.url = 'empty';
                this.content = '<div class=""w-100 text-center"">After article selection, this area will be filled with article content</div>';
                this.ready = false;
                this.resetQuestions();
            },
            findArticleTitle() {
       ");
            WriteLiteral("         return document.getElementById(\"selectArticle\").options[document.getElementById(\"selectArticle\").selectedIndex].text;\r\n            }\r\n        }\r\n    }).mount(\'#vm\');\r\n</script>\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<ArticleOption>> Html { get; private set; }
    }
}
#pragma warning restore 1591
